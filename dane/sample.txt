Czy Python może być używany do programowania po stronie klienta WWW i serwera WWW? A który najlepiej pasuje do Pythona ?
Wymień co najmniej 3-4 korzyści płynące z używania Pythona w porównaniu z innymi językami skryptowymi, takimi jak Javascript.
Wyjaśnij listę, krotki, zestaw i słownik i zapewnij co najmniej jedno wystąpienie, w którym można użyć każdego z tych typów kolekcji.
Czy Python umożliwia programowanie w ustrukturyzowanym stylu ?
Czym jest oprogramowanie PIP w świecie Pythona ?
Jakie powinno być typowe środowisko do tworzenia aplikacji w języku Python ?
Jakich narzędzi można użyć do testowania jednostkowego kodu Pythona ?
Czym różnią się pętle For i While w Pythonie i kiedy zdecydujesz się ich używać ?
W jaki sposób typy danych są zdefiniowane w Pythonie i ile bajtów przechowują typy danych całkowite i dziesiętne ?
W jaki sposób korzystasz z tablic w Pythonie ?
Jak zaimplementować JSON, biorąc pod uwagę, że Python najlepiej nadaje się do aplikacji po stronie serwera ?
Jaki jest najlepszy sposób analizowania ciągów znaków i znajdowania wzorców w Pythonie ?
Jakie bazy danych są obsługiwane przez Python ?
Jaki jest cel funkcji init(self) w Pythonie ?
Jakie jest znaczenie parametru „self” w metodzie obiektowej? Czy zawsze powinniśmy nazywać ten parametr „self” ?
Czym różni się funkcja Lambda od zwykłej funkcji w Pythonie ?
Jak wygląda obsługa wyjątków w Pythonie ?
Jaki jest punkt początkowy wykonywania kodu w Pythonie ?
Wymień niektóre z ważnych modułów, które są dostępne w Pythonie.
Których modułów Pythona można użyć do pomiaru wydajności kodu aplikacji ?
Jak uruchomić procesy podrzędne w procesie głównym aplikacji Python ?
W jaki sposób można zaimplementować wątki w kodzie serwera ?
Czy musimy wywoływać metody jawne, aby zniszczyć pamięć przydzieloną w Pythonie ?
Czy ten sam kod Pythona działa na wielu platformach bez żadnych zmian ?
Jak stworzyć aplikację opartą na GUI w Pythonie dla funkcjonalności po stronie klienta ?
Jakie są różne zmienne środowiskowe identyfikowane przez Pythona ?
Co to są krotki Pythona i czym się różnią od list ?
Co robi symbol „#” w Pythonie ?
Co robi string_var.strip() ?
Co to są operatory członkostwa w Pythonie? Napisz przykład, aby wyjaśnić oba.
Napisz kod, aby wyświetlić aktualny czas.
Jaki jest wynik print str[4:] if str = „język Python” ?
Napisz polecenie, aby pobrać wszystkie klucze ze słownika.
Napisz polecenie, aby przekonwertować ciąg znaków na int w Pythonie.
Co to help() i dir() w Pythonie ?
Co rozumiesz przez „pakiety” w Pythonie?
Co to jest range() w Pythonie? Podaj przykład, aby to wyjaśnić.
Jaka jest różnica między abs() a fabs() ?
Co to jest instrukcja from import i napisz dla niej składnię ?
Jaka jest różnica między locals() i globals() ?
Jakie jest zastosowanie asercji w Pythonie ?
Jaka jest różnica między kopiowaniem płytkim, a głębokim ?
Jaka instrukcja jest używana w Pythonie, jeśli instrukcja jest wymagana składniowo, ale nie jest wymagana żadna akcja dla programu ?
Do czego odnosi się PEP8 ?
Co to są *args i **kwargs ?
napisz funkcję generującą kolejne elementy ciągu Fibonacciego
zamień wartości dwóch zmiennych
co to jest i do czego służy type ?
czy parametry do funkcji są w pythonie przekazywanie przez wartość, czy referencję ?
jakie są podstawowe typy w pythonie ?
czy python jest językiem kompilowanym czy skryptowym ? słabo czy silnie typowanym ?
co to jest duck-typing ?
do czego służą i czym się różnią metody: init vs new, str vs repr, add vs radd
czym się różni metoda od funkcji ?
co to jest self ?
czy self jest słowem kluczowym ?
co to jest słowo kluczowe (keyword) ?
co oznacza instrukcja pass ? kiedy można jej użyć ?
co to są built-iny ?
jakie znasz sposoby na konkatenację stringów ? których warto, a których nie warto używać i dlaczego
czym się różni list i dict ?
czym się różni set i list ?
co to jest list/dict comprehension ?
jak działa wielokrotne dziedziczenie w pythonie ?
jak działa słownik ?
jak działa tablica ?
co to jest slots ?
dekoratory (z parametrem) + dekorowanie klas (po co do czego ?)
programowanie funkcyjne ( co to ? + closure )
multiprocessing vs multithreading vs asyncio (co to programowanie asynchroniczne, GIL itp.
co to są indexy, iteratory, generatory (yield), list of comprehension, map ?
czym się różni tupla vs lista vs słownik ?
co to duck typing ?
czy init jest konstruktorem ?
jak odwołać się do metod prywatnych spoza klasy ?
co to polimorfizm ?
wzorce projektowe
rekurencja
złożoność obliczeniowa
jakie znasz metody radzenia sobie z problemami IO bound, CPU bound, różnice między nimi, wady zalety
co to jest korutyna ?
GIL, co to jest, jak działa ?
multiprocessing, threading, a GIL ?
różnice w działaniu GIL'a między python2, a python3
jak działa garbage collector ?
co to są generacje GC ?
co decyduje w której generacji jest dany obiekt ?
co decyduje o czyszczeniu danej generacji ?
co tą są shadow references, podaj przykłąd (kod) ?
jak naprawić kod z shadow reference ?
jak zachowa się garbage collector dla shadow reference i dlaczego tak się zachowuje ?
różnice w działaniu GC dla python2, a python3
masz wyciek jak sobie z nim radzisz ?
contexmanager
co to jest contextmanager z wyrażeniem yield i gdzie go stosujesz ?
obsługa wyjątków
różnica między public, a protected
co to jest metoda prywatna, metoda chroniona i kiedy którą stosować ?
co to jest Python i do czego służy ?
Co to regex ?
Na czym polega 'monkey patching' ?
Jaka jest różnica pomiędzy range oraz xrange ?
Na czym polegają procesy nazywane 'pickling' oraz 'unpickling'?
Po co nam jest potrzebne wyrażenie: if __name__ == "__main__"
Eval, global, do czego służą, po co je wykorzystywać?
Typy immutable i muttable
__getattr__ vs __getatrribute__
Co może być kluczem słownika, czy typ bool może być kluczem słownika?
